{"is_source_file": true, "format": "Python", "description": "The provided file is a FastAPI-based Python source code defining a REST API for managing notes, including models, in-memory storage, and endpoint routes for CRUD operations, search, and utility functions such as seeding and resetting the data store.", "external_files": ["fastapi", "pydantic", "datetime", "threading"], "external_methods": ["fastapi.FastAPI", "fastapi.Depends", "fastapi.HTTPException", "fastapi.status", "fastapi.Query", "fastapi.Path", "fastapi.middleware.cors.CORSMiddleware", "pydantic.BaseModel", "pydantic.Field", "pydantic.ConfigDict", "datetime.datetime", "datetime.timezone"], "published": ["health_check", "create_note_endpoint", "list_notes_endpoint", "get_note_endpoint", "update_note_endpoint", "delete_note_endpoint", "seed_notes_endpoint", "reset_store_endpoint"], "classes": [{"name": "InMemoryNoteStore", "description": "A thread-safe in-memory store for notes, supporting CRUD, search, seed, and reset functionalities."}], "methods": [{"name": "PaginatedNotes list_notes(self, q: Optional[str], page: int, page_size: int)", "description": "List notes with optional search query and pagination.", "scope": "InMemoryNoteStore", "scopeKind": "class"}, {"name": "Note create_note(self, data: NoteCreate)", "description": "Create and store a new note.", "scope": "InMemoryNoteStore", "scopeKind": "class"}, {"name": "Optional[Note] get_note(self, note_id: int)", "description": "Retrieve a note by its ID.", "scope": "InMemoryNoteStore", "scopeKind": "class"}, {"name": "Optional[Note] update_note(self, note_id: int, patch: NoteUpdate)", "description": "Update fields of an existing note.", "scope": "InMemoryNoteStore", "scopeKind": "class"}, {"name": "bool delete_note(self, note_id: int)", "description": "Delete a note by its ID.", "scope": "InMemoryNoteStore", "scopeKind": "class"}, {"name": "int seed(self, count: int = 5)", "description": "Populate the store with sample notes.", "scope": "InMemoryNoteStore", "scopeKind": "class"}, {"name": "None reset(self)", "description": "Clear the store and reset IDs.", "scope": "InMemoryNoteStore", "scopeKind": "class"}, {"name": "__init__(self)", "scope": "InMemoryNoteStore", "scopeKind": "class", "description": "unavailable"}, {"name": "datetime _utcnow(self)", "scope": "InMemoryNoteStore", "scopeKind": "class", "description": "unavailable"}, {"name": "Note create_note_endpoint(payload: NoteCreate, repo: InMemoryNoteStore = Depends(get_store))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "None delete_note_endpoint( note_id: int = Path(..., ge=1, description=\"ID of the note to delete\"), repo: InMemoryNoteStore = Depends(get_store), )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Note get_note_endpoint( note_id: int = Path(..., ge=1, description=\"ID of the note to retrieve\"), repo: InMemoryNoteStore = Depends(get_store), )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "InMemoryNoteStore get_store()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "dict health_check()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "PaginatedNotes list_notes_endpoint( page: int = Query(1, ge=1, description=\"Page number starting from 1\"), page_size: int = Query(10, ge=1, le=100, description=\"Number of items per page\"), q: Optional[str] = Query(None, description=\"Search query for title/content\"), repo: InMemoryNoteStore = Depends(get_store), )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "dict reset_store_endpoint(repo: InMemoryNoteStore = Depends(get_store))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "dict seed_notes_endpoint( count: int = Query(5, ge=1, le=100, description=\"Number of sample notes to create\"), repo: InMemoryNoteStore = Depends(get_store), )", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Note update_note_endpoint( note_id: int = Path(..., ge=1, description=\"ID of the note to update\"), patch: NoteUpdate = ..., repo: InMemoryNoteStore = Depends(get_store), )", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["fastapi.FastAPI", "fastapi.Depends", "fastapi.HTTPException", "InMemoryNoteStore.list_notes", "InMemoryNoteStore.create_note", "InMemoryNoteStore.get_note", "InMemoryNoteStore.update_note", "InMemoryNoteStore.delete_note", "InMemoryNoteStore.seed", "InMemoryNoteStore.reset"], "search-terms": ["Notes API", "InMemoryNoteStore", "CRUD endpoints", "FastAPI routes", "search and pagination", "seed notes", "reset store", "note model", "thread-safe storage"], "state": 2, "file_id": 1, "knowledge_revision": 10, "git_revision": "ee1468dbbd5f37e40cfb4691b93116c30de88fe0", "revision_history": [{"9": "ee1468dbbd5f37e40cfb4691b93116c30de88fe0"}, {"10": "ee1468dbbd5f37e40cfb4691b93116c30de88fe0"}], "ctags": [{"_type": "tag", "name": "InMemoryNoteStore", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^class InMemoryNoteStore:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^class Note(NoteBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteBase", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^class NoteBase(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteCreate", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^class NoteCreate(NoteBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteUpdate", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^class NoteUpdate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "PaginatedNotes", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^class PaginatedNotes(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "InMemoryNoteStore", "scopeKind": "class"}, {"_type": "tag", "name": "_utcnow", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    def _utcnow(self) -> datetime:$/", "language": "Python", "typeref": "typename:datetime", "kind": "member", "signature": "(self)", "scope": "InMemoryNoteStore", "scopeKind": "class"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    content: Optional[str] = Field(default=None, description=\"New content\", min_length=1)$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    content: str = Field(..., description=\"Content of the note\", min_length=1)$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "NoteBase", "scopeKind": "class"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    def create_note(self, data: NoteCreate) -> Note:$/", "language": "Python", "typeref": "typename:Note", "kind": "member", "signature": "(self, data: NoteCreate)", "scope": "InMemoryNoteStore", "scopeKind": "class"}, {"_type": "tag", "name": "create_note_endpoint", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^def create_note_endpoint(payload: NoteCreate, repo: InMemoryNoteStore = Depends(get_store)) -> N/", "language": "Python", "typeref": "typename:Note", "kind": "function", "signature": "(payload: NoteCreate, repo: InMemoryNoteStore = Depends(get_store))"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    created_at: datetime = Field(..., description=\"Creation timestamp in UTC\")$/", "language": "Python", "typeref": "typename:datetime", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    def delete_note(self, note_id: int) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, note_id: int)", "scope": "InMemoryNoteStore", "scopeKind": "class"}, {"_type": "tag", "name": "delete_note_endpoint", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^def delete_note_endpoint($/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "( note_id: int = Path(..., ge=1, description=\"ID of the note to delete\"), repo: InMemoryNoteStore = Depends(get_store), )"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    def get_note(self, note_id: int) -> Optional[Note]:$/", "language": "Python", "typeref": "typename:Optional[Note]", "kind": "member", "signature": "(self, note_id: int)", "scope": "InMemoryNoteStore", "scopeKind": "class"}, {"_type": "tag", "name": "get_note_endpoint", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^def get_note_endpoint($/", "language": "Python", "typeref": "typename:Note", "kind": "function", "signature": "( note_id: int = Path(..., ge=1, description=\"ID of the note to retrieve\"), repo: InMemoryNoteStore = Depends(get_store), )"}, {"_type": "tag", "name": "get_store", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^def get_store() -> InMemoryNoteStore:$/", "language": "Python", "typeref": "typename:InMemoryNoteStore", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^def health_check() -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    id: int = Field(..., description=\"Unique identifier of the note\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    items: List[Note] = Field(..., description=\"List of notes for the current page\")$/", "language": "Python", "typeref": "typename:List[Note]", "kind": "variable", "scope": "PaginatedNotes", "scopeKind": "class"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    def list_notes(self, q: Optional[str], page: int, page_size: int) -> PaginatedNotes:$/", "language": "Python", "typeref": "typename:PaginatedNotes", "kind": "member", "signature": "(self, q: Optional[str], page: int, page_size: int)", "scope": "InMemoryNoteStore", "scopeKind": "class"}, {"_type": "tag", "name": "list_notes_endpoint", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^def list_notes_endpoint($/", "language": "Python", "typeref": "typename:PaginatedNotes", "kind": "function", "signature": "( page: int = Query(1, ge=1, description=\"Page number starting from 1\"), page_size: int = Query(10, ge=1, le=100, description=\"Number of items per page\"), q: Optional[str] = Query(None, description=\"Search query for title/content\"), repo: InMemoryNoteStore = Depends(get_store), )"}, {"_type": "tag", "name": "model_config", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    model_config = ConfigDict(from_attributes=True)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "page", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    page: int = Field(..., description=\"Current page index (1-based)\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "PaginatedNotes", "scopeKind": "class"}, {"_type": "tag", "name": "page_size", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    page_size: int = Field(..., description=\"Number of items per page\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "PaginatedNotes", "scopeKind": "class"}, {"_type": "tag", "name": "reset", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    def reset(self) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self)", "scope": "InMemoryNoteStore", "scopeKind": "class"}, {"_type": "tag", "name": "reset_store_endpoint", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^def reset_store_endpoint(repo: InMemoryNoteStore = Depends(get_store)) -> dict:$/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "(repo: InMemoryNoteStore = Depends(get_store))"}, {"_type": "tag", "name": "seed", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    def seed(self, count: int = 5) -> int:$/", "language": "Python", "typeref": "typename:int", "kind": "member", "signature": "(self, count: int = 5)", "scope": "InMemoryNoteStore", "scopeKind": "class"}, {"_type": "tag", "name": "seed_notes_endpoint", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^def seed_notes_endpoint($/", "language": "Python", "typeref": "typename:dict", "kind": "function", "signature": "( count: int = Query(5, ge=1, le=100, description=\"Number of sample notes to create\"), repo: InMemoryNoteStore = Depends(get_store), )"}, {"_type": "tag", "name": "store", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^store = InMemoryNoteStore()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "tags", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    tags: Optional[List[str]] = Field(default=None, description=\"New tags list (replaces existin/", "language": "Python", "typeref": "typename:Optional[List[str]]", "kind": "variable", "scope": "NoteUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "tags", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    tags: Optional[List[str]] = Field(default=None, description=\"Optional list of tags\")$/", "language": "Python", "typeref": "typename:Optional[List[str]]", "kind": "variable", "scope": "NoteBase", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    title: Optional[str] = Field(default=None, description=\"New title\", min_length=1, max_length/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    title: str = Field(..., description=\"Title of the note\", min_length=1, max_length=200)$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "NoteBase", "scopeKind": "class"}, {"_type": "tag", "name": "total", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    total: int = Field(..., description=\"Total number of notes\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "PaginatedNotes", "scopeKind": "class"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    def update_note(self, note_id: int, patch: NoteUpdate) -> Optional[Note]:$/", "language": "Python", "typeref": "typename:Optional[Note]", "kind": "member", "signature": "(self, note_id: int, patch: NoteUpdate)", "scope": "InMemoryNoteStore", "scopeKind": "class"}, {"_type": "tag", "name": "update_note_endpoint", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^def update_note_endpoint($/", "language": "Python", "typeref": "typename:Note", "kind": "function", "signature": "( note_id: int = Path(..., ge=1, description=\"ID of the note to update\"), patch: NoteUpdate = ..., repo: InMemoryNoteStore = Depends(get_store), )"}, {"_type": "tag", "name": "updated_at", "path": "/home/kavia/workspace/code-generation/note-keeper-180215-180247/notes_backend/src/api/main.py", "pattern": "/^    updated_at: datetime = Field(..., description=\"Last update timestamp in UTC\")$/", "language": "Python", "typeref": "typename:datetime", "kind": "variable", "scope": "Note", "scopeKind": "class"}], "hash": "4cae6d5217e7f14616a504bcaac7821b", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/main.py", "fields": [{"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[str] content", "scope": "NoteUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "str content", "scope": "NoteBase", "scopeKind": "class", "description": "unavailable"}, {"name": "datetime created_at", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "int id", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "List[Note] items", "scope": "PaginatedNotes", "scopeKind": "class", "description": "unavailable"}, {"name": "model_config = ConfigDict(from_attributes=True)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "int page", "scope": "PaginatedNotes", "scopeKind": "class", "description": "unavailable"}, {"name": "int page_size", "scope": "PaginatedNotes", "scopeKind": "class", "description": "unavailable"}, {"name": "store = InMemoryNoteStore()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[List[str]] tags", "scope": "NoteUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] title", "scope": "NoteUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "str title", "scope": "NoteBase", "scopeKind": "class", "description": "unavailable"}, {"name": "int total", "scope": "PaginatedNotes", "scopeKind": "class", "description": "unavailable"}, {"name": "datetime updated_at", "scope": "Note", "scopeKind": "class", "description": "unavailable"}]}